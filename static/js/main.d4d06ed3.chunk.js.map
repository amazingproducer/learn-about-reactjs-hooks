{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","data","setData","query","setQuery","url","setUrl","useEffect","a","axios","result","console","log","fetchData","type","value","onChange","event","target","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6QAoDeA,MA3Cf,WAAgB,IAAD,EACWC,mBAAS,MADpB,mBACNC,EADM,KACAC,EADA,OAEaF,mBAAS,gBAFtB,mBAENG,EAFM,KAECC,EAFD,OAGSJ,mBACpB,8CAJW,mBAGNK,EAHM,KAGDC,EAHC,KAkBb,OAXAC,qBAAU,YACO,uCAAG,4BAAAC,EAAA,sEACKC,IAAMJ,GADX,OACVK,EADU,OAGhBC,QAAQC,IAAIF,EAAOT,MACnBC,EAAQQ,EAAOT,MAJC,2CAAH,qDAOfY,KACC,CAACR,IAGF,eAAC,WAAD,WACE,uBACES,KAAK,OACLC,MAAOZ,EACPa,SAAU,SAAAC,GAAK,OAAIb,EAASa,EAAMC,OAAOH,UAE3C,wBACED,KAAK,SACLK,QAAS,kBACPb,EAAO,iCAAD,OAAkCH,KAH5C,oBASA,6BACGF,QChCMmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAGFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d4d06ed3.chunk.js","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\nimport axios from 'axios';\n\n\n\n\n\n\n\nfunction App() {\n  const [data, setData] = useState('{}');\n  const [query, setQuery] = useState('636046316036');\n  const [url, setUrl] = useState(\n    'https://upc.shamacon.us/grocy/636046316036',\n  );\n \n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await axios(url);\n \n      console.log(result.data);\n      setData(result.data);\n    };\n \n    fetchData();\n  }, [url]);\n \n  return (\n    <Fragment>\n      <input\n        type=\"text\"\n        value={query}\n        onChange={event => setQuery(event.target.value)}\n      />\n      <button\n        type=\"button\"\n        onClick={() =>\n          setUrl(`https://upc.shamacon.us/grocy/${query}`)\n        }\n      >\n        Search\n      </button>\n \n      <ul>\n        {data}\n      </ul>\n    </Fragment>\n  );\n}\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  \n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}