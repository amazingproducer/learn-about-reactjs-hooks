{"version":3,"sources":["Api.js","App.js","reportWebVitals.js","index.js"],"names":["axios","create","baseURL","responseType","App","upcResult","Api","get","data","useState","color","setColor","useEffect","changeColorOnClick","document","addEventListener","console","log","removeEventListener","id","style","width","height","position","left","top","backgroundColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"6OAGeA,E,OAAAA,EAAMC,OAAO,CACxBC,QAAS,iCACTC,aAAc,SCqDHC,EAjDH,WACV,IAIMC,EAJUC,EAAIC,IAAI,gBAAiB,IAIfC,KALV,EAOUC,mBAAS,SAPnB,mBAOTC,EAPS,KAOFC,EAPE,KA0BhB,OAjBAC,qBAAU,WACR,IAAMC,EAAqB,WAEvBF,EADY,UAAVD,EACO,MAEA,UAMb,OAFAI,SAASC,iBAAiB,QAASF,GAE5B,WACLG,QAAQC,IAAI,CAACZ,cACbS,SAASI,oBAAoB,QAASL,MAEvC,CAACH,IAGF,gCACGL,EACD,qBACEc,GAAG,QACHC,MAAO,CACLV,MAAO,QACPW,MAAO,QACPC,OAAQ,QACRC,SAAU,WACVC,KAAM,MACNC,IAAK,MACLC,gBAAiBhB,GATrB,SAYGL,QCtCMsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAGFxB,SAASyB,eAAe,SAM1BZ,M","file":"static/js/main.b972b9ba.chunk.js","sourcesContent":["import axios from 'axios';\n\n\nexport default axios.create({\n    baseURL: \"https://upc.shamacon.us/grocy/\",\n    responseType: \"json\"\n  });","import React, { useState, useEffect } from \"react\";\nimport Api from './Api';\n\n\n\n\n\n\n\nconst App = () => {\n  const upcData = Api.get('/636046316036', {\n\n  });\n  \n  const upcResult = upcData.data;\n  \n  const [color, setColor] = useState(\"black\");\n\n  useEffect(() => {\n    const changeColorOnClick = () => {\n      if (color === \"black\") {\n        setColor(\"red\");\n      } else {\n        setColor(\"black\");\n      }\n    };\n    \n    document.addEventListener(\"click\", changeColorOnClick);\n\n    return () => {\n      console.log({upcResult})\n      document.removeEventListener(\"click\", changeColorOnClick);\n    };\n  }, [color]);\n\n  return (\n    <div>\n      {upcResult}\n      <div\n        id=\"myDiv\"\n        style={{\n          color: \"white\",\n          width: \"100px\",\n          height: \"100px\",\n          position: \"absolute\",\n          left: \"50%\",\n          top: \"50%\",\n          backgroundColor: color,\n        }}\n      >\n        {upcResult}\n      </div>\n    </div>\n  );\n};\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  \n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}