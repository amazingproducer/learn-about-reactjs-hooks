{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","data","setData","query","setQuery","url","setUrl","useEffect","a","axios","result","obj","Object","entries","map","key","value","console","log","objResult","entry","index","id","status","errObj","response","errResult","error","headers","fetchData","htmlFor","onSubmit","event","preventDefault","test","type","maxLength","placeholder","required","onChange","targetValue","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6QA4FeA,MAzFf,WAAgB,IAAD,EACWC,mBAAS,wCADpB,mBACNC,EADM,KACAC,EADA,OAEaF,mBAAS,IAFtB,mBAENG,EAFM,KAECC,EAFD,OAGSJ,mBACpB,IAJW,mBAGNK,EAHM,KAGDC,EAHC,KA4Cb,OArCAC,qBAAU,YACO,uCAAG,oCAAAC,EAAA,mEAEXH,EAFW,iCAGSI,IAAMJ,GAHf,OAGNK,EAHM,OAINC,EAAMC,OAAOC,QAAQH,EAAOT,KAAKS,QAAQI,KAAI,yCAAmB,CAACC,IAApB,KAAyBC,MAAzB,SACnDC,QAAQC,IAAIP,GACNQ,EAAYR,EAAIG,KAAI,SAACM,EAAOC,GAGhC,OAFAJ,QAAQC,IAAI,uBACZD,QAAQC,IAAIE,GACL,qBAAIE,GAAG,gBAAP,UAAoCF,EAAML,IAA1C,KAAiDK,EAAMJ,QAA3BK,MAErCnB,EAAQiB,GAERF,QAAQC,IAAI,0BACZD,QAAQC,IAAIR,EAAOa,QAdP,0DAiBRC,EAASZ,OAAOC,QAAQ,KAAIY,SAASxB,KAAKS,QAAQI,KAAI,yCAAmB,CAACC,IAApB,KAAyBC,MAAzB,SACtDU,EAAYF,EAAOV,KAAI,SAACM,EAAOC,GACnC,OAAO,qBAAIC,GAAG,aAAP,UAAiCF,EAAML,IAAvC,KAA8CK,EAAMJ,QAA3BK,MAElCnB,EAAQwB,GAERT,QAAQU,MAAM,mBACdV,QAAQU,MAAM,KAAIF,SAASxB,KAAKS,QAChCO,QAAQC,IAAI,4BACZD,QAAQU,MAAM,KAAIF,SAASF,QAC3BN,QAAQU,MAAM,KAAIF,SAASG,SA3Bb,sGAAH,qDAiCfC,KACC,CAACxB,IAGF,eAAC,WAAD,WACE,uFACA,uBAAOyB,QAAQ,gBAAgBR,GAAG,qBAAlC,6BACA,uBACEA,GAAG,gBACHS,SAAW,SAAAC,GACTA,EAAMC,iBACH,KAAKC,KAAK/B,KAGbG,EAAO,+BAAD,OAAgCH,IACtCC,EAAS,MARb,UAYA,uBAAO0B,QAAQ,WAAWR,GAAG,gBAA7B,qBACA,uBACEA,GAAG,WACHa,KAAK,OACLC,UAAU,KACVpB,MAAOb,EACPkC,YAAY,gBACZC,UAAQ,EACRC,SAAU,SAAAP,GACR,IAAMQ,EAAcR,EAAMS,OAAOzB,MAC9B,cAAckB,KAAKM,IACtBpC,EAASoC,MAEb,uBAAOV,QAAQ,kBAAkBR,GAAG,uBAApC,qCACA,wBACEA,GAAG,kBACHa,KAAK,SAFP,oBAOA,oBAAIb,GAAG,gBAAP,SACCrB,QCzEQyC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAGFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8ff885f1.chunk.js","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction App() {\n  const [data, setData] = useState('Enter a 12-digit UPC or 13-digit EAN');\n  const [query, setQuery] = useState('');\n  const [url, setUrl] = useState(\n    '',\n  );\n \n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        if(url){\n          const result = await axios(url);\n          const obj = Object.entries(result.data.result).map(([key, value]) => ({key, value}))\n          console.log(obj);\n          const objResult = obj.map((entry, index) => {\n            console.log(\"here is the entry: \");\n            console.log(entry);\n            return <li id=\"resultMessage\" key={index}>{entry.key}: {entry.value}</li>;\n        });\n          setData(objResult);\n  \n          console.log(\"here is the response: \")\n          console.log(result.status)\n          }\n      } catch (err) {\n        const errObj = Object.entries(err.response.data.result).map(([key, value]) => ({key, value}))\n        const errResult = errObj.map((entry, index) => {\n          return <li id=\"errMessage\" key={index}>{entry.key}: {entry.value}</li>;\n        });\n        setData(errResult);\n\n        console.error(\"Error response:\");\n        console.error(err.response.data.result);    // ***\n        console.log(\"here is the error status\")\n        console.error(err.response.status);  // ***\n        console.error(err.response.headers); // ***\n      } finally {\n  \n      }\n    };\n\n    fetchData();\n  }, [url]);\n \n  return (\n    <Fragment>\n      <h1>Enter a barcode number to search for its product name</h1>\n      <label htmlFor='upcSearchForm' id='upcSearchFormLabel'>UPC Search Form</label>\n      <form\n        id=\"upcSearchForm\"\n        onSubmit={ event => {\n          event.preventDefault()\n          if(/^$/.test(query)){\n            return\n          }\n          setUrl(`https://upc.shamacon.us/off/${query}`)\n          setQuery(\"\")\n        }\n        }\n        >\n      <label htmlFor='upcInput' id='upcInputLabel'>Barcode</label>\n      <input\n        id=\"upcInput\"\n        type=\"text\"\n        maxLength=\"13\"\n        value={query}\n        placeholder=\"UPC or EAN-13\"\n        required\n        onChange={event => {\n          const targetValue = event.target.value\n          if(/^[0-9]+$|^$/.test(targetValue)){\n          setQuery(targetValue)}}}\n      />\n      <label htmlFor='upcSearchSubmit' id='upcSearchSubmitLabel'>Search for Product Name</label>\n      <button\n        id=\"upcSearchSubmit\"\n        type=\"submit\"\n      >\n        Go!\n      </button>\n      </form>\n      <ul id='upcResultList'>\n      {data}\n    </ul> \n\n    </Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  \n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}